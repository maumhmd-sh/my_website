/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...404]': RouteRecordInfo<'/[...404]', '/:404(.*)', { 404: ParamValue<true> }, { 404: ParamValue<false> }>,
    '/bar': RouteRecordInfo<'/bar', '/bar', Record<never, never>, Record<never, never>>,
    '/bookmarks': RouteRecordInfo<'/bookmarks', '/bookmarks', Record<never, never>, Record<never, never>>,
    '/certification': RouteRecordInfo<'/certification', '/certification', Record<never, never>, Record<never, never>>,
    '/chat-zh': RouteRecordInfo<'/chat-zh', '/chat-zh', Record<never, never>, Record<never, never>>,
    '/contact': RouteRecordInfo<'/contact', '/contact', Record<never, never>, Record<never, never>>,
    '/gallery': RouteRecordInfo<'/gallery', '/gallery', Record<never, never>, Record<never, never>>,
    '/giving-talks': RouteRecordInfo<'/giving-talks', '/giving-talks', Record<never, never>, Record<never, never>>,
    '/notes': RouteRecordInfo<'/notes', '/notes', Record<never, never>, Record<never, never>>,
    '/post/placeholder': RouteRecordInfo<'/post/placeholder', '/post/placeholder', Record<never, never>, Record<never, never>>,
    '/projects': RouteRecordInfo<'/projects', '/projects', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'pages/index.md': {
      routes: '/'
      views: never
    }
    'pages/[...404].md': {
      routes: '/[...404]'
      views: never
    }
    'pages/bar.md': {
      routes: '/bar'
      views: never
    }
    'pages/bookmarks.md': {
      routes: '/bookmarks'
      views: never
    }
    'pages/certification.md': {
      routes: '/certification'
      views: never
    }
    'pages/chat-zh.md': {
      routes: '/chat-zh'
      views: never
    }
    'pages/contact.md': {
      routes: '/contact'
      views: never
    }
    'pages/gallery.md': {
      routes: '/gallery'
      views: never
    }
    'pages/giving-talks.md': {
      routes: '/giving-talks'
      views: never
    }
    'pages/notes.md': {
      routes: '/notes'
      views: never
    }
    'pages/post/placeholder.md': {
      routes: '/post/placeholder'
      views: never
    }
    'pages/projects.md': {
      routes: '/projects'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
